<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>