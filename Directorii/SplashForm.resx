<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>